unit SignUp;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.StdCtrls, System.Hash, Vcl.Mask, Vcl.DBCtrls;

type
  TRegistrar = class(TForm)
    edit_user: TEdit;
    edit_password: TEdit;
    lbl_title: TLabel;
    lbl_user: TLabel;
    lbl_password: TLabel;
    btn_submit: TButton;
    btn_cancel: TButton;
    db_edit_id: TDBEdit;
    lbl_repeat_password: TLabel;
    edit_repeat_password: TEdit;
    procedure btn_submitClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Registrar: TRegistrar;

implementation

{$R *.dfm}

uses db;

procedure TRegistrar.btn_submitClick(Sender: TObject);
var
  id, hash:string;
begin
  if (Edit1.Text = '') or (Edit2.Text = '') then
    begin
      ShowMessage('Preencha todos os dados');
    end
  else if Edit2.Text <> Edit3.Text then
    begin
      ShowMessage('As senhas digitadas ão são iguais!');
    end
  else
    begin
      try
        db.DataModule1.FDQuery6.SQL.Clear;

        if DBEdit1.Text = '' then
          begin
            id := '1';
          end
        else
          begin
            id := IntToStr(StrToInt(DBEdit1.Text) + 1);
          end;

        hash := THashMD5.GetHashString(Edit2.Text);

        db.DataModule1.FDQuery6.SQL.Add('insert into usuarios(id, nome, senha) values ('
        + chr(39) + id + chr(39) + ',' + chr(39) + Edit1.Text + chr(39) + ',' + chr(39)
        + hash + chr(39)+ ');');

        db.DataModule1.FDQuery6.Active;
        db.DataModule1.FDQuery6.ExecSQL;

        ShowMessage('Usuário Cadastrado, faça Login!');

        DBEdit1.DataSource.DataSet.Refresh;

        Registrar.Close;



      except
        ShowMessage('Não foi possivel cadastrar o usuário!');

      end;
    end;

end;
end.
